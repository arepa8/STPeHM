import sys
#sys.path.append('app/')
sys.path.append('../')
from models import *

# Constantes
CONST_MIN		= 0
CONST_MAX_100	= 100
CONST_MAX_500	= 500
CONST_MAX_CI	= 999999999

class nonPathologicalBackground():
	""" Constrolador de Antecedentes Familiares """

	def insertNonPathologicalBackground(self,ci_user,defecation,toothbrushing,cigarrettes,years,beverages,frecuency,physical_activity,frecuency2,other):
		check_ci 	= (ci_user !=None) and (type(ci_user) == int)
		check_other = type(other) == str

		if (check_ci and check_other):

			check_long_ci = 1 <= ci_user <= CONST_MAX_CI
			check_long_other = CONST_MIN <= len(other) <= CONST_MAX_500
			
			if check_long_ci and check_long_other:

				old = NonPathologicalBackground.query.filter_by(ci_user=ci).first()

    			if old == None:
		        	new = PathologicalBackground(ci,form.current_condition.data,
		                                    form.surgical_history.data,
		                                    form.transfusional_history.data,
		                                    form.allergies.data,
		                                    form.traumatic_history.data,
		                                    form.hospitalizations.data,
		                                    form.addictions.data,
		                                    form.other.data)
		        	db.session.add(new)
		        	db.session.commit()

			        return True
        return False

   	def updateNonPathologicalBackground(self,ci_user,defecation,toothbrushing,cigarrettes,years,beverages,frecuency,physical_activity,frecuency2,other):

   		check_ci 	= (ci_user !=None) and (type(ci_user) == int)
		check_other = type(other) == str

		if (check_ci and check_other):

			check_long_ci = 1 <= ci_user <= CONST_MAX_CI
			check_long_other = CONST_MIN <= len(other) <= CONST_MAX_500

	   		if check_long_ci and check_long_other:
		   		old = NonPathologicalBackground.query.filter_by(ci_user=ci_user).first()

		   		if old != None:
			   		old.current_condition=form.current_condition.data
			        old.surgical_history=form.surgical_history.data
			        old.transfusional_history=form.transfusional_history.data
			        old.allergies=form.allergies.data
			        old.traumatic_history=form.traumatic_history.data
			        old.hospitalizations=form.hospitalizations.data
			        old.addictions=form.addictions.data
			        old.other=form.other.data
			        db.session.commit()
		        	return True
        return False

    def deleteNonPathologicalBackground(ci_user):
		
		old = NonPathologicalBackground.query.filter_by(ci_user=ci_user).first()
		
		if old != None
			db.session.delete(old)
			db.session.commit()
			return True

		return False 	